@* Generator: Template TypeVisibility: Internal GeneratePrettyNames: True *@
@using System
@using System.Collections.Generic
@using System.Linq
@using Hangfire.Atoms
@using Hangfire.Common
@using Hangfire.Dashboard
@using Hangfire.Dashboard.Pages
@using Hangfire.Dashboard.Resources
@using Hangfire.Storage
@inherits Hangfire.Dashboard.RazorPage
@{
    Layout = new LayoutPage("Atoms");

    int from, perPage;

    int.TryParse(Query("from"), out from);
    int.TryParse(Query("count"), out perPage);

    long count = 0;
    List<string> atoms = null;
    Pager pager = null;
    using (var connection = Storage.GetConnection())
    {
        if (connection is JobStorageConnection jsc)
        {
            count = jsc.GetListCount(Atom.JobListKey);
            pager = new Pager(from, perPage, count);
            atoms = jsc.GetRangeFromList(Atom.JobListKey, pager.FromRecord, pager.FromRecord + pager.RecordsPerPage - 1);
        }
    }

    Func<string, Job> GetJobData = (string jobId) =>
    {
        using (var connection = Storage.GetConnection())
        {
            return connection.GetJobData(jobId).Job;
        }
    };

    Func<string, int> GetJobProgressPercentage = (string jobId) =>
    {
        Dictionary<string, string> subatomsProgress;
        using (var connection = Storage.GetConnection())
        {
            subatomsProgress = connection.GetAllEntriesFromHash(Atom.GenerateSubAtomKeys(jobId));
        }

        var finished = subatomsProgress.Count(x => x.Value == Atom.Finished);
        var all = subatomsProgress.Count;
        return finished * 100 / all;
    };
}

<div class="row">
    <div class="col-md-3">
        @Html.JobsSidebar()
    </div>
    <div class="col-md-9">
        <h1 class="page-header">Atomic jobs</h1>

        @if (pager.TotalPageCount == 0)
        {
            <div class="alert alert-info">
                No atomic jobs is running
            </div>
        }
        else
        {
            <div class="js-jobs-list">
                <div class="btn-toolbar btn-toolbar-top">
                    @Html.PerPageSelector(pager)
                </div>

                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="min-width">
                                    <input type="checkbox" class="js-jobs-list-select-all" />
                                </th>
                                <th class="min-width" style="line-break: strict">@Strings.Common_Id</th>
                                <th class="min-width" style="line-break: strict">@Strings.Common_Job</th>
                                <th>Progress</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var atom in atoms)
                            {
                                var progress = GetJobProgressPercentage(atom);
                                <tr class="js-jobs-list-row">
                                    <td>
                                        <input type="checkbox" class="js-jobs-list-checkbox" name="jobs[]" value="@atom" />
                                    </td>
                                    <td nowrap>
                                        <a href="@Url.To("/jobs/atoms/" + atom)">@atom</a>
                                    </td>
                                    <td nowrap> @Html.JobNameLink(atom, GetJobData(atom))</td>
                                    <td>
                                        <div class="progress">
                                            <div class="progress-bar progress-bar-warning progress-bar-striped active" role="progressbar" aria-valuenow="@progress" aria-valuemin="0" aria-valuemax="100" style="width: @progress%;">
                                                <span class="sr-only">@progress% complete</span>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @Html.Paginator(pager)
            </div>
        }
    </div>
</div>
