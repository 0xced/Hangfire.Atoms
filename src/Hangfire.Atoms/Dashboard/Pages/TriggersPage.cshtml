@* Generator: Template TypeVisibility: Internal GeneratePrettyNames: True *@
@using System
@using System.Collections.Generic
@using System.Linq
@using Hangfire.Atoms
@using Hangfire.Common
@using Hangfire.Dashboard
@using Hangfire.Dashboard.Pages
@using Hangfire.Dashboard.Resources
@using Hangfire.Storage
@inherits Hangfire.Dashboard.RazorPage
@{
    Layout = new LayoutPage("Triggers");

    int from, perPage;

    int.TryParse(Query("from"), out from);
    int.TryParse(Query("count"), out perPage);

    long count = 0;
    List<string> triggers = null;
    Pager pager = null;
    using (var connection = Storage.GetConnection())
    {
        if (connection is JobStorageConnection jsc)
        {
            count = jsc.GetListCount(Trigger.JobListKey);
            pager = new Pager(from, perPage, count);
            triggers = jsc.GetRangeFromList(Trigger.JobListKey, pager.FromRecord, pager.FromRecord + pager.RecordsPerPage - 1);
        }
    }

    Func<string, string> GetTriggerName = (string jobId) =>
    {
        using (var connection = Storage.GetConnection())
        {
            return connection.GetJobParameter(jobId, Trigger.ParameterName);
        }
    };
}

<div class="row">
    <div class="col-md-3">
        @Html.JobsSidebar()
    </div>
    <div class="col-md-9">
        <h1 class="page-header">Triggers</h1>

        @if (pager.TotalPageCount == 0)
        {
            <div class="alert alert-info">
                No triggers are waiting.
            </div>
        }
        else
        {
            <div class="js-jobs-list">
                <div class="btn-toolbar btn-toolbar-top">
                    @Html.PerPageSelector(pager)
                </div>

                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="min-width">
                                    <input type="checkbox" class="js-jobs-list-select-all" />
                                </th>
                                <th>@Strings.Common_Id</th>
                                <th>@Strings.Common_Job</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var trigger in triggers)
                            {
                                var triggerName = GetTriggerName(trigger);
                                if (triggerName == null)
                                {
                                    continue;
                                }

                                <tr class="js-jobs-list-row">
                                    <td>
                                        <input type="checkbox" class="js-jobs-list-checkbox" name="jobs[]" value="@trigger" />
                                    </td>
                                    <td class="min-width word-break">
                                        @Html.JobIdLink(trigger)
                                    </td>
                                    <td class="word-break">
                                        <a href="@Url.To($"/jobs/details/{trigger}")" class="job-method">@triggerName</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @Html.Paginator(pager)
            </div>
        }
    </div>
</div>
