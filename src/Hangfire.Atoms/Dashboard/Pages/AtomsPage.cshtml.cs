#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hangfire.Atoms.Dashboard.Pages
{
    
    #line 2 "..\..\Dashboard\Pages\AtomsPage.cshtml"
    using System;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Dashboard\Pages\AtomsPage.cshtml"
    using System.Collections.Generic;
    
    #line default
    #line hidden
    using System.Linq;
    using System.Text;
    
    #line 4 "..\..\Dashboard\Pages\AtomsPage.cshtml"
    using Hangfire.Atoms;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Dashboard\Pages\AtomsPage.cshtml"
    using Hangfire.Common;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Dashboard\Pages\AtomsPage.cshtml"
    using Hangfire.Dashboard;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Dashboard\Pages\AtomsPage.cshtml"
    using Hangfire.Dashboard.Pages;
    
    #line default
    #line hidden
    
    #line 8 "..\..\Dashboard\Pages\AtomsPage.cshtml"
    using Hangfire.Dashboard.Resources;
    
    #line default
    #line hidden
    
    #line 9 "..\..\Dashboard\Pages\AtomsPage.cshtml"
    using Hangfire.Storage;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    internal partial class AtomsPage : Hangfire.Dashboard.RazorPage
    {
#line hidden

        public override void Execute()
        {


WriteLiteral("\r\n");











            
            #line 11 "..\..\Dashboard\Pages\AtomsPage.cshtml"
  
    Layout = new LayoutPage("Atoms");

    int from, perPage;

    int.TryParse(Query("from"), out from);
    int.TryParse(Query("count"), out perPage);

    long count = 0;
    List<string> atoms = null;
    Pager pager = null;
    using (var connection = Storage.GetConnection())
    {
        if (connection is JobStorageConnection jsc)
        {
            count = jsc.GetListCount(Atom.JobListKey);
            pager = new Pager(from, perPage, count);
            atoms = jsc.GetRangeFromList(Atom.JobListKey, pager.FromRecord , pager.FromRecord + pager.RecordsPerPage - 1);
        }
    }

    Func<string, Job> GetJobData = (string jobId) =>
    {
        using (var connection = Storage.GetConnection())
        {
            return connection.GetJobData(jobId).Job;
        }
    };


            
            #line default
            #line hidden
WriteLiteral("\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n        ");


            
            #line 43 "..\..\Dashboard\Pages\AtomsPage.cshtml"
   Write(Html.JobsSidebar());

            
            #line default
            #line hidden
WriteLiteral("\r\n    </div>\r\n    <div class=\"col-md-9\">\r\n        <h1 class=\"page-header\">Atomic " +
"jobs</h1>\r\n\r\n");


            
            #line 48 "..\..\Dashboard\Pages\AtomsPage.cshtml"
         if (pager.TotalPageCount == 0)
        {

            
            #line default
            #line hidden
WriteLiteral("            <div class=\"alert alert-info\">\r\n                No atomic jobs were c" +
"reated\r\n            </div>\r\n");


            
            #line 53 "..\..\Dashboard\Pages\AtomsPage.cshtml"
        }
        else
        {

            
            #line default
            #line hidden
WriteLiteral("            <div class=\"js-jobs-list\">\r\n                <div class=\"btn-toolbar b" +
"tn-toolbar-top\">\r\n                    ");


            
            #line 58 "..\..\Dashboard\Pages\AtomsPage.cshtml"
               Write(Html.PerPageSelector(pager));

            
            #line default
            #line hidden
WriteLiteral(@"
                </div>

                <div class=""table-responsive"">
                    <table class=""table"">
                        <thead>
                        <tr>
                            <th class=""min-width"">
                                <input type=""checkbox"" class=""js-jobs-list-select-all"" />
                            </th>
                            <th class=""min-width"">");


            
            #line 68 "..\..\Dashboard\Pages\AtomsPage.cshtml"
                                             Write(Strings.Common_Id);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                            <th>");


            
            #line 69 "..\..\Dashboard\Pages\AtomsPage.cshtml"
                           Write(Strings.Common_Job);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                        </tr>\r\n                        </thead>\r\n         " +
"               <tbody>\r\n");


            
            #line 73 "..\..\Dashboard\Pages\AtomsPage.cshtml"
                         foreach (var atom in atoms)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <tr class=\"js-jobs-list-row\">\r\n                      " +
"          <td>\r\n                                    <input type=\"checkbox\" class" +
"=\"js-jobs-list-checkbox\" name=\"jobs[]\" value=\"");


            
            #line 77 "..\..\Dashboard\Pages\AtomsPage.cshtml"
                                                                                                         Write(atom);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n                                </td>\r\n                                <td>" +
"\r\n                                    ");


            
            #line 80 "..\..\Dashboard\Pages\AtomsPage.cshtml"
                               Write(Html.JobIdLink(atom));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </td>\r\n                                <td>");


            
            #line 82 "..\..\Dashboard\Pages\AtomsPage.cshtml"
                               Write(Html.JobNameLink(atom, GetJobData(atom)));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            </tr>\r\n");


            
            #line 84 "..\..\Dashboard\Pages\AtomsPage.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        </tbody>\r\n                    </table>\r\n                <" +
"/div>\r\n\r\n                ");


            
            #line 89 "..\..\Dashboard\Pages\AtomsPage.cshtml"
           Write(Html.Paginator(pager));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n");


            
            #line 91 "..\..\Dashboard\Pages\AtomsPage.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n</div>\r\n");


        }
    }
}
#pragma warning restore 1591
